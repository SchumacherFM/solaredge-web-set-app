syntax = "proto2";

package types;

message Uint32 {
    optional uint32 value = 1;
    optional bool ro = 2;
    optional Uint32Atr attributes = 3;

    message Uint32Atr {
        optional uint32 min = 1;
        optional uint32 max = 2;
        optional uint32 step = 3;
    }
}

message Uint64 {
    optional uint64 value = 1;
    optional bool ro = 2;
    optional Uint64Atr attributes = 3;

    message Uint64Atr {
        optional uint64 min = 1;
        optional uint64 max = 2;
        optional uint64 step = 3;
    }
}

message Int32 {
    optional int32 value = 1;
    optional bool ro = 2;
    optional Int32Atr attributes = 3;

    message Int32Atr {
        optional int32 min = 1;
        optional int32 max = 2;
        optional int32 step = 3;
    }
}

message Float {
    optional float value = 1;
    optional bool ro = 2;
    optional FloatAtr attributes = 3;

    message FloatAtr {
        optional float min = 1;
        optional float max = 2;
        optional float step = 3;
    }
}

message FloatS {
    optional int32 value = 1;
    optional int32 scaling = 2;
    optional bool ro = 3;
    optional FloatSAtr attributes = 4;

    message FloatSAtr {
        optional int32 min = 1;
        optional int32 max = 2;
        optional int32 step = 3;
    }
}

message Double {
    optional double value = 1;
    optional bool ro = 2;
    optional DoubleAtr attributes = 3;

    message DoubleAtr {
        optional double min = 1;
        optional double max = 2;
        optional double step = 3;
    }
}

message Bool {
    optional bool value = 1;
    optional bool ro = 2;
}

message String {
    optional string value = 1;
    optional bool ro = 2;
}

message Bytes {
    optional bytes value = 1;
    optional bool ro = 2;
}

message MapUintToUint {
    optional uint32 key = 1;
    optional uint32 value = 2;
}

message MapIntToInt {
    optional int32 key = 1;
    optional int32 value = 2;
}

message MapFloatToFloat {
    optional float key = 1;
    optional float value = 2;
}

message MapFloatSToFloatS {
    optional FloatS key = 1;
    optional FloatS value = 2;
}

message MapStringToString {
    optional string key = 1;
    optional string value = 2;
}
